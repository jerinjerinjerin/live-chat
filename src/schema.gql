# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Attachment {
  createdAt: DateTime!
  fileType: String!
  id: ID!
  message: Message!
  url: String!
}

type Chat {
  createdAt: DateTime!
  createdBy: User!
  deletedAt: DateTime
  id: ID!
  isGroup: Boolean!
  messages: [Message!]!
  name: String
  participants: [ChatMember!]!
  updatedAt: DateTime!
}

type ChatMember {
  chat: Chat!
  id: ID!
  joinedAt: DateTime!
  lastReadAt: DateTime
  role: ChatRole!
  user: User!
}

enum ChatRole {
  ADMIN
  MEMBER
}

input CreateChatInput {
  isGroup: Boolean! = false
  name: String
  participantIds: [String]
}

input CreateUserInput {
  avatarUrl: String
  email: String!
  name: String!
  password: String!
  role: UserRole! = USER
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DeleteChatResponse {
  message: String!
  success: Boolean!
}

type LoginResponse {
  accessToken: String!
  message: String!
  refreshToken: String!
}

type Message {
  attachments: [Attachment!]!
  chat: Chat!
  content: String
  createdAt: DateTime!
  deletedAt: DateTime
  id: ID!
  messageType: MessageType!
  sender: User!
  updatedAt: DateTime!
}

enum MessageType {
  FILE
  IMAGE
  TEXT
  VIDEO
}

type Mutation {
  createChat(input: CreateChatInput!): Chat!
  deleteChat(chatId: String!): DeleteChatResponse!
  loginUser(email: String!, password: String!): LoginResponse!
  refreshAccessToken: LoginResponse!
  registerUser(data: CreateUserInput!): RegisterResponse!
  updateChat(chatId: String!, name: String!): Chat!
  verifyUser(email: String!, otp: String!): VerifyOtpResponse!
}

type Query {
  getHello: String!
  me: User!
}

type RegisterResponse {
  email: String!
  message: String!
  otpSent: Boolean!
}

type User {
  avatarUrl: String
  createdAt: DateTime
  deletedAt: DateTime
  email: String!
  failedLoginAttempts: Float
  isActive: Boolean
  isEmailVerified: Boolean
  isGoogleUser: Boolean
  isPaid: Boolean
  lastActivityAt: DateTime
  lastLoginAt: DateTime
  name: String!
  otp: String
  otpExpiresAt: DateTime
  role: UserRole!
  updatedAt: DateTime
}

"""Role of the user"""
enum UserRole {
  ADMIN
  MODERATOR
  USER
}

type VerifyOtpResponse {
  accessToken: String!
  message: String!
  refreshToken: String!
}